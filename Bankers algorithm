#include<conio.h>
#include<stdio.h>
int main()
{
 int n,r, i,j,s,f,count,avail[10],p[10]; 

 printf("\nEnter the number of process :");
 scanf("%d",&n);
 printf("\n Enter the no. of resources available : ");
 scanf("%d",&r);
 int need[n][r],alloc[n][r],max[n][r];

 printf("\n Enter allocation matrix  \n");
 for(i=0;i<n;i++)
 {
 printf("p%d",i+1);         
  p[i]=0;
 for(j=0;j<r;j++)
 {
  scanf("%d",&alloc[i][j]);
 }
}
  printf("\n Enter MAX matrix  \n");

 for(i=0;i<n;i++)
 {
 printf("p%d",i+1);
 for(j=0;j<r;j++)
 {
  scanf("%d",&max[i][j]);
 }
 }
  printf("\nEnter insatnces for resources :\n");
 for(i=0;i<r;i++)
 {  printf("R%d ",i+1);
  scanf("%d",&avail[i]);
  }

 for(i=0;i<n;i++)
 {
 printf("\np%d\t",i+1) ;
 for(j=0;j<r;j++)
 {
  need[i][j]=max[i][j]-alloc[i][j];
  printf("\t%d",need[i][j]);
  }
 }
 s=0;     count=0;
 printf("\n\n");
 while(s<15)
 {
 for(i=0;i<n;i++)
 {  f=0;
 for(j=0;j<r;j++)
 {
  if(p[i]==1) 
  break;
  if(need[i][j]<=avail[j])
  {
  f++;
  }
  if(f==r)
  {
  for(j=0;j<r;j++)
  {
  avail[j]+=alloc[i][j];
  }
  printf("p%d\t",i+1); 
   p[i]=1;    
    count++;
  }
 }
 } s++;
 }
 if(count<n-1)
 {
 printf("\n NOT IN SAFE STATE ");
 }
     
 }
